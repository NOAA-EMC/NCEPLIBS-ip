@PACKAGE_INIT@

#  * @PROJECT_NAME@::@PROJECT_NAME@_4 - real32 library target
#  * @PROJECT_NAME@::@PROJECT_NAME@_d - mixed library target

# Include targets file.  This will create IMPORTED target @PROJECT_NAME@
include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-config-version.cmake")
include(CMakeFindDependencyMacro)

if(@OPENMP@)
  find_dependency(OpenMP COMPONENT Fortran)
endif()

find_dependency(sp REQUIRED)

# Initialize the static/shared builds of this library
set(@PROJECT_NAME@_HAS_STATIC_LIBS OFF)
if(@BUILD_STATIC_LIBS@)
  set(@PROJECT_NAME@_HAS_STATIC_LIBS ON)
endif()

set(@PROJECT_NAME@_HAS_SHARED_LIBS OFF)
if(@BUILD_SHARED_LIBS@)
  set(@PROJECT_NAME@_HAS_SHARED_LIBS ON)
endif()

# By default, prefer to use STATIC libs
# If the user wishes to use SHARED libs, they can do so by either:
# 1. set(ip_USE_SHARED_LIBS ON) in their project, or
# 2. -Dip_USE_SHARED_LIBS=ON during their project configuration
if(@PROJECT_NAME@_USE_SHARED_LIBS)
  # First check if @PROJECT_NAME@ was built with SHARED libs, if not, error out.
  if(NOT @PROJECT_NAME@_HAS_SHARED_LIBS)
    message(FATAL "@PROJECT_NAME@ was not built as a shared library, try static instead")
  endif()
  add_library(@PROJECT_NAME@::@PROJECT_NAME@_4 ALIAS @PROJECT_NAME@::@PROJECT_NAME@_4_shared)
  add_library(@PROJECT_NAME@::@PROJECT_NAME@_d ALIAS @PROJECT_NAME@::@PROJECT_NAME@_d_shared)
else()
  add_library(@PROJECT_NAME@::@PROJECT_NAME@_4 ALIAS @PROJECT_NAME@::@PROJECT_NAME@_4_static)
  add_library(@PROJECT_NAME@::@PROJECT_NAME@_d ALIAS @PROJECT_NAME@::@PROJECT_NAME@_d_static)
endif()

check_required_components("@PROJECT_NAME@")

get_target_property(location @PROJECT_NAME@::@PROJECT_NAME@_4 LOCATION)
message(STATUS "Found @PROJECT_NAME@: ${location} (found version \"@PROJECT_VERSION@\")")

